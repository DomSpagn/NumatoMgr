import tkinter as tk
from tkinter import ttk, PhotoImage
import serial
import sys
import glob

# This file was generated by the Tkinter Designer
from pathlib import Path

OUTPUT_PATH = Path(__file__).parent

ICON_PATH = OUTPUT_PATH / Path(r"C:\Users\ITDOSPA\Desktop\NumatoMgr\images\icon")
COVER_PATH = OUTPUT_PATH / Path(r"C:\Users\ITDOSPA\Desktop\NumatoMgr\images\cover")
MANUAL_PANEL_PATH = OUTPUT_PATH / Path(r"C:\Users\ITDOSPA\Desktop\NumatoMgr\images\manual\panel")
MANUAL_TEST_PATH = OUTPUT_PATH / Path(r"C:\Users\ITDOSPA\Desktop\NumatoMgr\images\manual\test")
AUTOMATIC_PANEL_PATH = OUTPUT_PATH / Path(r"C:\Users\ITDOSPA\Desktop\NumatoMgr\images\automatic\panel")
AUTOMATIC_TEST_PATH = OUTPUT_PATH / Path(r"C:\Users\ITDOSPA\Desktop\NumatoMgr\images\automatic\test")

    
def clear_current_window(current_window):    
    for widget in current_window.winfo_children():
        widget.destroy()

    
def create_debug_window(current_window, msg):
    pass


def get_icon_path(path: str) -> Path:
    return ICON_PATH / Path(path)


def get_cover_path(path: str) -> Path:
    return COVER_PATH / Path(path)


def get_panel_path(type, path: str) -> Path:
    if(type == 'manual'):
        return MANUAL_PANEL_PATH / Path(path)
    else:
        return AUTOMATIC_PANEL_PATH / Path(path)


def get_test_path(type, path: str) -> Path:
    if(type == 'manual'):
        return MANUAL_TEST_PATH / Path(path)
    else:
        return AUTOMATIC_TEST_PATH / Path(path)


# SERIAL COM
def beautify_result(list_in):
    list_out = []
    match len(max(list_in, key = len)):
        case 4:
            for elem in list_in:
                list_out.append("       " + elem + "        ")            
        case 5:
            for elem in list_in:
                list_out.append("     " + elem + "        ")            
        case 6:
            for elem in list_in:
                list_out.append("    " + elem + "       ")            
        
    return list_out
        

    
def list_serial_ports():
    if sys.platform.startswith('win'):
        ports = ['COM%s' % (i + 1) for i in range(256)]
    else:
        raise EnvironmentError('Unsupported platform')

    result = []
    for port in ports:
        try:
            s = serial.Serial(port)
            s.close()
            result.append(port)
        except (OSError, serial.SerialException):
            pass
        
    beauty_res = beautify_result(result)
    return beauty_res


def on_com_select(com_var, *args):
    selected_value = com_var.get()
    print(f"Selected COM: {selected_value}")


# Baudrate
def get_baudrate_list():
    return ["   2400 bps  ", "   4800 bps  ", "   9600 bps  ", "   19200 bps  ", "   38400 bps  ", "   57600 bps  ", "   115200 bps  ", "   230400 bps  ", "   460800 bps  ", "   500000 bps  ", "   576000 bps  ", "   921600 bps  ", "  1000000 bps  "]


def on_baudrate_select(baudrate_var, *args):
    selected_value = baudrate_var.get()
    print(f"Selected baudrate: {selected_value}")


# Relays Configuration
'''
def set_relay_config(test_class, num, state):
    if(test_class.type == 'manual'):
        match num:
            case 1:
                if(state == 'off'):
                    test_class.button_img_relay_1 = PhotoImage(file=get_panel_path("manual", "relay_1_off.png"))
                else:
                    test_class.button_img_relay_1 = PhotoImage(file=get_panel_path("manual", "relay_1_on.png"))
            case 2:
                if(state == 'off'):
                    test_class.button_img_relay_2 = PhotoImage(file=get_panel_path("manual", "relay_2_off.png"))
                else:
                    test_class.button_img_relay_2 = PhotoImage(file=get_panel_path("manual", "relay_2_on.png"))
            case 3:
                if(state == 'off'):
                    test_class.button_img_relay_3 = PhotoImage(file=get_panel_path("manual", "relay_3_off.png"))
                else:
                    test_class.button_img_relay_3 = PhotoImage(file=get_panel_path("manual", "relay_3_on.png"))
            case 4:
                if(state == 'off'):
                    test_class.button_img_relay_4 = PhotoImage(file=get_panel_path("manual", "relay_4_off.png"))
                else:
                    test_class.button_img_relay_4 = PhotoImage(file=get_panel_path("manual", "relay_4_on.png"))
            case 5:
                if(state == 'off'):
                    test_class.button_img_relay_5 = PhotoImage(file=get_panel_path("manual", "relay_5_off.png"))
                else:
                    test_class.button_img_relay_5 = PhotoImage(file=get_panel_path("manual", "relay_5_on.png"))
            case 6:
                if(state == 'off'):
                    test_class.button_img_relay_6 = PhotoImage(file=get_panel_path("manual", "relay_6_off.png"))
                else:
                    test_class.button_img_relay_6 = PhotoImage(file=get_panel_path("manual", "relay_6_on.png"))
            case 7:
                if(state == 'off'):
                    test_class.button_img_relay_7 = PhotoImage(file=get_panel_path("manual", "relay_7_off.png"))
                else:
                    test_class.button_img_relay_7 = PhotoImage(file=get_panel_path("manual", "relay_7_on.png"))
            case 8:
                if(state == 'off'):
                    test_class.button_img_relay_8 = PhotoImage(file=get_panel_path("manual", "relay_8_off.png"))
                else:
                    test_class.button_img_relay_8 = PhotoImage(file=get_panel_path("manual", "relay_8_on.png"))
            case 9:
                if(state == 'off'):
                    test_class.button_img_relay_9 = PhotoImage(file=get_panel_path("manual", "relay_9_off.png"))
                else:
                    test_class.button_img_relay_9 = PhotoImage(file=get_panel_path("manual", "relay_9_on.png"))
            case 10:
                if(state == 'off'):
                    test_class.button_img_relay_10 = PhotoImage(file=get_panel_path("manual", "relay_10_off.png"))
                else:
                    test_class.button_img_relay_10 = PhotoImage(file=get_panel_path("manual", "relay_10_on.png"))
            case 11:
                if(state == 'off'):
                    test_class.button_img_relay_11 = PhotoImage(file=get_panel_path("manual", "relay_11_off.png"))
                else:
                    test_class.button_img_relay_11 = PhotoImage(file=get_panel_path("manual", "relay_11_on.png"))
            case 12:
                if(state == 'off'):
                    test_class.button_img_relay_12 = PhotoImage(file=get_panel_path("manual", "relay_12_off.png"))
                else:
                    test_class.button_img_relay_12 = PhotoImage(file=get_panel_path("manual", "relay_12_on.png"))
            case 13:
                if(state == 'off'):
                    test_class.button_img_relay_13 = PhotoImage(file=get_panel_path("manual", "relay_13_off.png"))
                else:
                    test_class.button_img_relay_13 = PhotoImage(file=get_panel_path("manual", "relay_13_on.png"))
            case 14:
                if(state == 'off'):
                    test_class.button_img_relay_14 = PhotoImage(file=get_panel_path("manual", "relay_14_off.png"))
                else:
                    test_class.button_img_relay_14 = PhotoImage(file=get_panel_path("manual", "relay_14_on.png"))
            case 15:
                if(state == 'off'):
                    test_class.button_img_relay_15 = PhotoImage(file=get_panel_path("manual", "relay_15_off.png"))
                else:
                    test_class.button_img_relay_15 = PhotoImage(file=get_panel_path("manual", "relay_15_on.png"))
            case 16:
                if(state == 'off'):
                    test_class.button_img_relay_16 = PhotoImage(file=get_panel_path("manual", "relay_16_off.png"))
                else:
                    test_class.button_img_relay_16 = PhotoImage(file=get_panel_path("manual", "relay_16_on.png"))
    else:
        match num:
            case 1:
                if(state == 'off'):
                    test_class.button_img_relay_1 = PhotoImage(file=get_panel_path("auto", "relay_1_off.png"))
                else:
                    test_class.button_img_relay_1 = PhotoImage(file=get_panel_path("auto", "relay_1_on.png"))
            case 2:
                if(state == 'off'):
                    test_class.button_img_relay_2 = PhotoImage(file=get_panel_path("auto", "relay_2_off.png"))
                else:
                    test_class.button_img_relay_2 = PhotoImage(file=get_panel_path("auto", "relay_2_on.png"))
            case 3:
                if(state == 'off'):
                    test_class.button_img_relay_3 = PhotoImage(file=get_panel_path("auto", "relay_3_off.png"))
                else:
                    test_class.button_img_relay_3 = PhotoImage(file=get_panel_path("auto", "relay_3_on.png"))
            case 4:
                if(state == 'off'):
                    test_class.button_img_relay_4 = PhotoImage(file=get_panel_path("auto", "relay_4_off.png"))
                else:
                    test_class.button_img_relay_4 = PhotoImage(file=get_panel_path("auto", "relay_4_on.png"))
            case 5:
                if(state == 'off'):
                    test_class.button_img_relay_5 = PhotoImage(file=get_panel_path("auto", "relay_5_off.png"))
                else:
                    test_class.button_img_relay_5 = PhotoImage(file=get_panel_path("auto", "relay_5_on.png"))
            case 6:
                if(state == 'off'):
                    test_class.button_img_relay_6 = PhotoImage(file=get_panel_path("auto", "relay_6_off.png"))
                else:
                    test_class.button_img_relay_6 = PhotoImage(file=get_panel_path("auto", "relay_6_on.png"))
            case 7:
                if(state == 'off'):
                    test_class.button_img_relay_7 = PhotoImage(file=get_panel_path("auto", "relay_7_off.png"))
                else:
                    test_class.button_img_relay_7 = PhotoImage(file=get_panel_path("auto", "relay_7_on.png"))
            case 8:
                if(state == 'off'):
                    test_class.button_img_relay_8 = PhotoImage(file=get_panel_path("auto", "relay_8_off.png"))
                else:
                    test_class.button_img_relay_8 = PhotoImage(file=get_panel_path("auto", "relay_8_on.png"))
            case 9:
                if(state == 'off'):
                    test_class.button_img_relay_9 = PhotoImage(file=get_panel_path("auto", "relay_9_off.png"))
                else:
                    test_class.button_img_relay_9 = PhotoImage(file=get_panel_path("auto", "relay_9_on.png"))
            case 10:
                if(state == 'off'):
                    test_class.button_img_relay_10 = PhotoImage(file=get_panel_path("auto", "relay_10_off.png"))
                else:
                    test_class.button_img_relay_10 = PhotoImage(file=get_panel_path("auto", "relay_10_on.png"))
            case 11:
                if(state == 'off'):
                    test_class.button_img_relay_11 = PhotoImage(file=get_panel_path("auto", "relay_11_off.png"))
                else:
                    test_class.button_img_relay_11 = PhotoImage(file=get_panel_path("auto", "relay_11_on.png"))
            case 12:
                if(state == 'off'):
                    test_class.button_img_relay_12 = PhotoImage(file=get_panel_path("auto", "relay_12_off.png"))
                else:
                    test_class.button_img_relay_12 = PhotoImage(file=get_panel_path("auto", "relay_12_on.png"))
            case 13:
                if(state == 'off'):
                    test_class.button_img_relay_13 = PhotoImage(file=get_panel_path("auto", "relay_13_off.png"))
                else:
                    test_class.button_img_relay_13 = PhotoImage(file=get_panel_path("auto", "relay_13_on.png"))
            case 14:
                if(state == 'off'):
                    test_class.button_img_relay_14 = PhotoImage(file=get_panel_path("auto", "relay_14_off.png"))
                else:
                    test_class.button_img_relay_14 = PhotoImage(file=get_panel_path("auto", "relay_14_on.png"))
            case 15:
                if(state == 'off'):
                    test_class.button_img_relay_15 = PhotoImage(file=get_panel_path("auto", "relay_15_off.png"))
                else:
                    test_class.button_img_relay_15 = PhotoImage(file=get_panel_path("auto", "relay_15_on.png"))
            case 16:
                if(state == 'off'):
                    test_class.button_img_relay_16 = PhotoImage(file=get_panel_path("auto", "relay_16_off.png"))
                else:
                    test_class.button_img_relay_16 = PhotoImage(file=get_panel_path("auto", "relay_16_on.png"))
'''    

# GPIOs Configuration
'''
def set_gpio_config(test_class, num, state):
    if(test_class.type == 'manual'):
        match num:
            case 0:
                if(state == 'off'):
                    test_class.button_img_gpio_0 = PhotoImage(file=get_panel_path("manual", "gpio_0_off.png"))
                else:
                    test_class.button_img_gpio_0 = PhotoImage(file=get_panel_path("manual", "gpio_0_on.png"))        
            case 1:
                if(state == 'off'):
                    test_class.button_img_gpio_1 = PhotoImage(file=get_panel_path("manual", "gpio_1_off.png"))
                else:
                    test_class.button_img_gpio_1 = PhotoImage(file=get_panel_path("manual", "gpio_1_on.png"))        
            case 2:
                if(state == 'off'):
                    test_class.button_img_gpio_2 = PhotoImage(file=get_panel_path("manual", "gpio_2_off.png"))
                else:
                    test_class.button_img_gpio_2 = PhotoImage(file=get_panel_path("manual", "gpio_2_on.png"))        
            case 3:
                if(state == 'off'):
                    test_class.button_img_gpio_3 = PhotoImage(file=get_panel_path("manual", "gpio_3_off.png"))
                else:
                    test_class.button_img_gpio_3 = PhotoImage(file=get_panel_path("manual", "gpio_3_on.png"))        
            case 4:
                if(state == 'off'):
                    test_class.button_img_gpio_4 = PhotoImage(file=get_panel_path("manual", "gpio_4_off.png"))
                else:
                    test_class.button_img_gpio_4 = PhotoImage(file=get_panel_path("manual", "gpio_4_on.png"))        
            case 5:
                if(state == 'off'):
                    test_class.button_img_gpio_5 = PhotoImage(file=get_panel_path("manual", "gpio_5_off.png"))
                else:
                    test_class.button_img_gpio_5 = PhotoImage(file=get_panel_path("manual", "gpio_5_on.png"))        
            case 6:
                if(state == 'off'):
                    test_class.button_img_gpio_6 = PhotoImage(file=get_panel_path("manual", "gpio_6_off.png"))
                else:
                    test_class.button_img_gpio_6 = PhotoImage(file=get_panel_path("manual", "gpio_6_on.png"))        
            case 7:
                if(state == 'off'):
                    test_class.button_img_gpio_7 = PhotoImage(file=get_panel_path("manual", "gpio_7_off.png"))
                else:
                    test_class.button_img_gpio_7 = PhotoImage(file=get_panel_path("manual", "gpio_7_on.png"))        
    else:
        match num:
            case 0:
                if(state == 'off'):
                    test_class.button_img_gpio_0 = PhotoImage(file=get_panel_path("auto", "gpio_0_off.png"))
                else:
                    test_class.button_img_gpio_0 = PhotoImage(file=get_panel_path("auto", "gpio_0_on.png"))        
            case 1:
                if(state == 'off'):
                    test_class.button_img_gpio_1 = PhotoImage(file=get_panel_path("auto", "gpio_1_off.png"))
                else:
                    test_class.button_img_gpio_1 = PhotoImage(file=get_panel_path("auto", "gpio_1_on.png"))        
            case 2:
                if(state == 'off'):
                    test_class.button_img_gpio_2 = PhotoImage(file=get_panel_path("auto", "gpio_2_off.png"))
                else:
                    test_class.button_img_gpio_2 = PhotoImage(file=get_panel_path("auto", "gpio_2_on.png"))        
            case 3:
                if(state == 'off'):
                    test_class.button_img_gpio_3 = PhotoImage(file=get_panel_path("auto", "gpio_3_off.png"))
                else:
                    test_class.button_img_gpio_3 = PhotoImage(file=get_panel_path("auto", "gpio_3_on.png"))        
            case 4:
                if(state == 'off'):
                    test_class.button_img_gpio_4 = PhotoImage(file=get_panel_path("auto", "gpio_4_off.png"))
                else:
                    test_class.button_img_gpio_4 = PhotoImage(file=get_panel_path("auto", "gpio_4_on.png"))        
            case 5:
                if(state == 'off'):
                    test_class.button_img_gpio_5 = PhotoImage(file=get_panel_path("auto", "gpio_5_off.png"))
                else:
                    test_class.button_img_gpio_5 = PhotoImage(file=get_panel_path("auto", "gpio_5_on.png"))        
            case 6:
                if(state == 'off'):
                    test_class.button_img_gpio_6 = PhotoImage(file=get_panel_path("auto", "gpio_6_off.png"))
                else:
                    test_class.button_img_gpio_6 = PhotoImage(file=get_panel_path("auto", "gpio_6_on.png"))        
            case 7:
                if(state == 'off'):
                    test_class.button_img_gpio_7 = PhotoImage(file=get_panel_path("auto", "gpio_7_off.png"))
                else:
                    test_class.button_img_gpio_7 = PhotoImage(file=get_panel_path("auto", "gpio_7_on.png"))        
'''
'''            
def get_serial_tout(entry):
    user_input = entry.get()
    
    
def select_serial_timeout(current_window):
    try:
        tout_text = Label(current_window, text = 'timeout: ')
        tout_text.place(x = 200, y = 150)
    except:
        create_debug_window(current_window, 'get_serial_timeout')
'''    